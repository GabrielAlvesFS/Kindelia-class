neg(b: Bool): Bool 
  case b{
	true: Bool.false 
	false: Bool.true
  }

// Basic Exercises involving Pairs

type Pair <A: Type, B: Type> {
  new(fst: A, snd: B)
}

// Example:
// Swaps the elements of a pair
// swap<A: Type, B: Type>(pair: Pair<A,B>): Pair<B,A>
//   case pair {
//     new: Pair.new<B, A>(pair.snd, pair.fst)
//   }

//------------------------------------------------------------------
// Returns the first element of a pair
first<A: Type, B: Type>(pair: Pair<A,B>): A
  case pair{
    new: pair.fst
  }

  // ex_05: Nat
  //   first<Nat Nat>(Pair.new<Nat Nat>(Nat.succ(Nat.zero), Nat.zero))

//------------------------------------------------------------------  
// Returns the second element of a pair
second<A: Type, B: Type>(pair: Pair<A,B>): B
  case pair{
    new: pair.snd
  }

// ex_05: Nat
//     second<Nat Nat>(Pair.new<Nat Nat>(Nat.succ(Nat.zero), Nat.zero))

//------------------------------------------------------------------
// Applies a function to both elements of a Pair
 map<A: Type, B: Type>(fn: A -> B, pair: Pair<A,A>): Pair<B,B>
   case pair{
     new: Pair.new<B, B>(fn(pair.fst), fn(pair.snd))
   }

// ex_05: Pair<Nat, Nat>
// map<Nat, Nat>( Nat.pred, Pair.new<Nat, Nat>(5, 5))